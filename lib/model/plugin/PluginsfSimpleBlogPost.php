<?php



/**
 * Skeleton subclass for representing a row from the 'sf_blog_post' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.5.5 on:
 *
 * Mon 27 Dec 2010 07:15:57 PM WIT
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.plugins.sfSimpleBlog15Plugin.lib.model.plugin
 */
class PluginsfSimpleBlogPost extends BasesfSimpleBlogPost {
  public function  getExtract()
  {
    $extract = '';
    //search for <p><!-- pagebreak --></p>
    $v = $this->getContent();
    if (false === $pos = stripos($v, '<p><!-- pagebreak -->'))
    {
      $pos = stripos($v, '<!-- pagebreak -->');
    }
    if ($pos !== false)
    {
      $extract = substr($v, 0, $pos-1);
    }
    return $extract;
  }
  
  public function setInternalPublishedAt($v)
  {
    $this->setPublishedAt($v);
    parent::setInternalPublishedAt($v);
  }

  public function getAuthor(PropelPDO $con = null)
  {
    return $this->getsfGuardUser($con);
  }

  public function getAuthorEmail()
  {
    return $this->getAuthor()->getProfile()->getEmail();
  }

  public function setAuthor(sfGuardUser $v = null)
  {
    return $this->setsfGuardUser($v);
  }

  public function allowComments()
  {
    if ($this->getAllowComments())
    {
      $validity = sfConfig::get('app_sfSimpleBlog_comment_disable_after', 0);
      if ($validity == 0 || $this->getPublishedSinceDays() < $validity)
      {
        return true;
      }
    }

    return false;
  }

  public function getPublishedSinceDays()
  {
    return round((time() - $this->getPublishedAt('U')) / (24 * 60 * 60));
  }

  public function setTagsFromString($v)
  {
    $this->addTag($v);
    return $this;
  }

  public function getTagsAsString()
  {
    $tags = $this->getTags();
    return implode($tags, ', ');
  }

  public function getCategoriesAsString()
  {
    $postCategories = $this->getsfSimpleBlogPostCategorysJoinsfSimpleBlogCategory();
    $categories = array();
    foreach ($postCategories as $postCategory)
    {
      $categories[] = $postCategory->getsfSimpleBlogCategory()->getName();
    }
    if ($categories) return implode($categories, ', ');
    return '';
  }

  public function getCategoriesAsArray()
  {
    $postCategories = $this->getsfSimpleBlogPostCategorysJoinsfSimpleBlogCategory();
    $categories = array();
    foreach ($postCategories as $postCategory)
    {
      $categories[] = $postCategory->getsfSimpleBlogCategory()->getName();
    }
    return $categories;
  }

  public function getFeedLink()
  {
    return sfSimpleBlogTools::generatePostUri($this);
  }
} // sfSimpleBlogPost

sfPropelBehavior::add('sfSimpleBlogPost', array('sfPropelActAsTaggableBehavior'));