<?php



/**
 * This class defines the structure of the 'sf_blog_post_version' table.
 *
 *
 * This class was autogenerated by Propel 1.6.0-dev on:
 *
 * Wed 26 Jan 2011 10:35:17 PM WIT
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.plugins.sfSimpleBlog15Plugin.lib.model.map
 */
class sfSimpleBlogPostVersionTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'plugins.sfSimpleBlog15Plugin.lib.model.map.sfSimpleBlogPostVersionTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('sf_blog_post_version');
		$this->setPhpName('sfSimpleBlogPostVersion');
		$this->setClassname('sfSimpleBlogPostVersion');
		$this->setPackage('plugins.sfSimpleBlog15Plugin.lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('ID', 'Id', 'INTEGER' , 'sf_blog_post', 'ID', true, null, null);
		$this->addColumn('AUTHOR_ID', 'AuthorId', 'INTEGER', true, null, null);
		$this->addColumn('TITLE', 'Title', 'VARCHAR', true, 255, null);
		$this->addColumn('STRIPPED_TITLE', 'StrippedTitle', 'VARCHAR', true, 245, null);
		$this->addColumn('CONTENT', 'Content', 'LONGVARCHAR', true, null, null);
		$this->addColumn('IS_PUBLISHED', 'IsPublished', 'BOOLEAN', false, null, false);
		$this->addColumn('ALLOW_COMMENTS', 'AllowComments', 'BOOLEAN', false, null, true);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('PUBLISHED_AT', 'PublishedAt', 'DATE', false, null, null);
		$this->addColumn('INTERNAL_PUBLISHED_AT', 'InternalPublishedAt', 'TIMESTAMP', false, null, null);
		$this->addPrimaryKey('VERSION', 'Version', 'SMALLINT', false, null, 1);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('sfSimpleBlogPost', 'sfSimpleBlogPost', RelationMap::MANY_TO_ONE, array('id' => 'id', ), 'CASCADE', null);
	} // buildRelations()

} // sfSimpleBlogPostVersionTableMap
